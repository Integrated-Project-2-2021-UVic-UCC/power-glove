#include <TimerOne.h>
#include "MPU9250.h"

MPU9250 mpu;



float flex2 = A0;
float flex3 = A1;
float flex4 = A2;
float pitch;
float roll;

struct Trama {
  
  float flex2;
  float flex3;
  float flex4;
  float pitch;
  float roll;
  
};

struct Trama trama;

#define SCAPECHAR 0xAA
#define STARTCHAR 0x11
#define ENDCHAR 0x22


void setup() {
  
  Serial.begin(115200);
  Wire.begin();
  delay(500);
  
  pinMode(flex2,INPUT);
  pinMode(flex3,INPUT);
  pinMode(flex4,INPUT);

  if (!mpu.setup(0x68)) {} // change to your own address
    
  Timer1.initialize(150000);                                
  Timer1.attachInterrupt(ISR_interna);
  delay(1000);
}

void loop() {
    if (mpu.update()) {
        static uint32_t prev_ms = millis();
        if (millis() > prev_ms + 100) {
          trama.pitch = mpu.getPitch();
          trama.roll = mpu.getRoll();
          delay(45);
          enviar_trama();
          prev_ms = millis();
        }
    }
}
void printejar() {
    Serial.print(flex2);Serial.print("  ");
    Serial.print(flex3);Serial.print("  ");
    Serial.print(flex4);Serial.print("  ");
    Serial.print(pitch);Serial.print("  ");
    Serial.println(roll);
}
void ISR_interna (){
  trama.flex2 = analogRead(flex2);//trama.flex2 = flex2;
  trama.flex3 = analogRead(flex3);//trama.flex3 = flex3;
  trama.flex4 = analogRead(flex4);//trama.flex4 = flex4;
}
void enviar_trama(void){
  char *buf = (char *)&trama;
  int N = sizeof(Trama);
  int i;
  
  Serial.write(SCAPECHAR);
  Serial.write(STARTCHAR);

  for(i=0; i<N; i++) {
    if(buf[i]==SCAPECHAR) {
      Serial.write(SCAPECHAR);
      Serial.write(SCAPECHAR);
    }
    else {
      Serial.write(buf[i]);
    }
  }
  Serial.write(SCAPECHAR);
  Serial.write(ENDCHAR);
}
